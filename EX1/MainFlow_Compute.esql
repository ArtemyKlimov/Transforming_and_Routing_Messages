	DECLARE msg NAMESPACE 'http://message.kfd.gpb.ru';
	DECLARE bi NAMESPACE 'http://bankinfo.kfd.gpb.ru'; 
	DECLARE bt NAMESPACE 'http://basetypes.kfd.gpb.ru'; 
	DECLARE doc NAMESPACE 'http://edocument.kfd.gpb.ru'; 
	DECLARE eci NAMESPACE 'http://extcustomerinfo.kfd.gpb.ru'; 
	DECLARE hd NAMESPACE 'http://messageheader.kfd.gpb.ru'; 
	DECLARE mb NAMESPACE 'http://messagebody.kfd.gpb.ru'; 
	DECLARE ns1 NAMESPACE 'http://paymentdoc.kfd.gpb.ru'; 
	DECLARE ohd NAMESPACE 'http://objectheader.kfd.gpb.ru'; 
	DECLARE po NAMESPACE 'http://paymentorderrub.kfd.gpb.ru'; 
	DECLARE pos NAMESPACE 'http://posting.kfd.gpb.ru';
	DECLARE ds NAMESPACE 'http://www.w3.org/2000/09/xmldsig#';


CREATE COMPUTE MODULE MainFlow_Compute

	DECLARE timeDifference EXTERNAL INTEGER;
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
	--	CALL CopyMessageHeaders();
		DECLARE errorID INTEGER 0;		
		
		IF CheckAccountNums() = FALSE THEN
			SET errorID = 1;
		ELSEIF CheckUUID() = FALSE THEN
			SET errorID = 2;
		ELSEIF CheckTime() = FALSE THEN
			SET errorID = 3;
		ELSE
			CALL CopyEntireMessage(); 
			PROPAGATE TO LABEL 'L01' DELETE NONE;
			PROPAGATE TO LABEL 'L02' DELETE NONE;
			PROPAGATE TO LABEL 'L03' DELETE NONE;
			PROPAGATE TO LABEL 'L04';
		END IF;
		IF errorID <> 0 THEN
			CALL SentToError(errorID);
		END IF;		
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
	
	CREATE PROCEDURE SentToError(IN cause INTEGER) BEGIN
		DECLARE error CHARACTER;
		IF cause = 1 THEN
			SET error = 'Debit not equals to Credit';
		ELSEIF cause = 2 THEN
			SET error = 'Invalid UUID';
		ELSEIF cause = 3 THEN
			SET error = 'Invalid ObjectLastChanged Field';
		ELSE
			SET error = 'Unknown error';
		END IF;
		--SET OutputRoot.Properties = InputRoot.Properties;
		--Set OutputRoot.MQMD = InputRoot.MQMD;
		CALL CopyMessageHeaders();
	--	SET OutputRoot.MQRFH2.usr.errorDescription = error;
	--	SET OutputRoot.XMLNSC = InputRoot.XMLNSC;
		PROPAGATE TO terminal 'out2';
	END;
	
	CREATE FUNCTION CheckTime() RETURNS BOOLEAN
	BEGIN
		DECLARE timePattern CHARACTER 'IU';
		DECLARE objectLastChange_str CHARACTER;
		SET objectLastChange_str = InputRoot.XMLNSC.msg:Message.msg:MessageHeader.hd:ObjectLastChanged;
		DECLARE objectLastChange TIMESTAMP;
		SET objectLastChange = CAST(objectLastChange_str AS TIMESTAMP FORMAT timePattern);
		DECLARE current_diff INTERVAL;
		DECLARE default_timeDifference INTERVAL;
		SET default_timeDifference = CAST(timeDifference AS INTERVAL MINUTE);
		SET current_diff = (CURRENT_TIMESTAMP - objectLastChange) MINUTE;
		IF default_timeDifference <  current_diff THEN   --change later
			RETURN TRUE;
		ELSE
			RETURN FALSE;
		END IF;		
	END;
	
	
	
	CREATE FUNCTION CheckUUID() RETURNS BOOLEAN
	BEGIN
		DECLARE uuid CHARACTER;
		SET uuid = InputRoot.XMLNSC.msg:Message.msg:MessageHeader.hd:MessageId;
		DECLARE isUUIDisCorrect BOOLEAN;
		SET isUUIDisCorrect = UUIDChecker(uuid);
		IF isUUIDisCorrect = TRUE THEN
			RETURN TRUE;
		ELSE
			RETURN FALSE;
		END IF;			
	END;
	
	CREATE FUNCTION UUIDChecker(IN uuid CHARACTER) 
	RETURNS BOOLEAN
	LANGUAGE JAVA
	EXTERNAL NAME "utilities.UUIDChecker.check";	
	
	CREATE FUNCTION CheckAccountNums() RETURNS BOOLEAN
	BEGIN
		DECLARE debit CHARACTER;
		DECLARE credit CHARACTER;
		
		SET credit = InputRoot.XMLNSC.msg:Message.msg:MessageBody.mb:ObjectBody.mb:PaymentDoc.ns1:PaymentOrderRub.mb:Credit;
		SET debit = InputRoot.XMLNSC.msg:Message.msg:MessageBody.mb:ObjectBody.mb:PaymentDoc.ns1:PaymentOrderRub.mb:Debit;
		IF debit <> credit THEN
			RETURN FALSE;
		ELSE
			RETURN TRUE;
		END IF;		
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
